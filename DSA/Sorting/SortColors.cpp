#include <algorithm>
#include <iostream>
#include <vector>
#include <limits.h>
using namespace std;

vector<int> sortColors(vector<int> &A) {
    const int n = A.size();
    int pZero = 0;
    int pTwo = n - 1;
    int i = 1;
    while (i <= pTwo) {
        if (A[i] == 0) {
            swap(A[i], A[pZero]);
            pZero++;
            continue;
        } else if (A[i] == 2) {
            swap(A[i], A[pTwo]);
            pTwo--;
            continue;
        } else {
            i++;
        }
        if(pZero == i) {
            i++;
        }
    }
    return A;
}

int main() {
    vector<int> v = {2, 1, 1, 0, 2, 2, 2, 2, 1, 1, 1, 1, 2, 0, 0, 0, 1, 2, 2, 1, 1, 1, 2, 2, 1, 0, 0, 1, 1, 0, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 0, 0, 0, 2, 2, 1, 0, 2, 2, 1, 2, 1, 2, 0, 2, 0, 2, 2, 0, 1, 0, 0, 2, 2, 1, 1, 2, 0, 0, 2, 1, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 2, 0, 1, 2, 0, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 1, 1, 1, 1, 0, 1, 2, 2, 2, 2, 2, 0, 1, 2, 1, 1, 1, 0, 2, 0, 2, 2, 0, 1, 1, 2, 1, 1, 0, 2, 1, 1, 0, 0, 1, 0, 2, 1, 2, 0, 2, 1, 2, 2, 0, 2, 1, 0, 1, 2, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 1, 1, 0, 0, 0, 1, 2, 1, 1, 1, 1, 0, 2, 0, 2, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 2, 2, 2, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 0, 1, 2, 1, 0, 1, 2, 0, 0, 2, 1, 2, 0, 2, 2, 2, 0, 2, 1, 0, 1, 2, 2, 1, 2, 2, 2, 2, 0, 1, 2, 2, 2, 1, 2, 0, 0, 0, 1, 1, 2, 0, 1, 2, 1, 1, 1, 1, 0, 2, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 2, 2, 2, 1, 0, 0, 2, 2, 1, 0, 1, 2, 1, 2, 2, 1, 0, 1, 0, 1, 0, 2, 0, 0, 0, 2, 1, 2, 0, 1, 0, 1, 2, 0, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 2, 2, 0, 2, 0, 2, 0, 1, 0, 2, 0, 1, 1, 2, 2, 1, 0, 1, 2, 0, 2, 1, 0, 2, 1, 0, 0, 2, 1, 0, 2, 0, 2, 0, 0, 0, 0, 1, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 0, 1, 2, 0, 1, 0, 2, 1, 0, 0, 2, 0, 1, 2, 1, 1, 1, 0, 2, 2, 0, 1, 2, 0, 1, 1, 2, 2, 0, 0, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0, 1, 2, 0, 2, 0, 0, 2, 0, 1, 1, 2, 1, 1, 2, 2, 0, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 0, 0, 2, 2, 0, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0, 1, 1, 0, 0, 0, 2, 1, 2, 0, 1, 2, 2, 0, 0, 2, 0, 2, 0, 1, 1, 0, 2, 1, 0, 0, 2, 2, 0, 0, 2, 1, 2, 1, 2, 0, 2, 2, 0, 1, 2, 2, 0, 1, 1, 1, 1, 2, 2, 0, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 2, 1, 2, 0, 1, 2, 2, 1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 2, 0, 2, 1, 1, 2, 1, 0, 1, 1, 0, 2, 0, 0, 2, 2, 2, 2, 2, 2, 0, 1, 0, 1, 2, 1, 1, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 2, 1, 1, 2, 1, 0, 0, 0, 1, 0, 1, 1, 0, 2, 1, 1, 2, 0, 2, 0, 2, 1, 0, 2, 0, 2, 0, 2, 0, 1, 2, 2, 1, 2, 0, 2, 1, 2, 1, 0, 0, 2, 1, 0, 2, 2, 1, 0, 1, 2, 2, 2, 0, 0, 2, 2, 0, 1, 1, 0, 2, 0, 1 };
    cout << v.size() << endl;
    auto res = sortColors(v);
    cout << res.size() << endl;
    for (const auto& elem : res) {
        cout << elem << " ";
    }
    return 0;
}